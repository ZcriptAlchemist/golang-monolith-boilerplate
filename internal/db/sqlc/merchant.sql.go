// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: merchant.sql

package sqlc

import (
	"context"
)

const createMerchant = `-- name: CreateMerchant :exec
INSERT INTO admins (
    name, email, created_at 
) VALUES (
    $1, $2, NOW() 
)
`

type CreateMerchantParams struct {
	Name  string
	Email string
}

func (q *Queries) CreateMerchant(ctx context.Context, arg CreateMerchantParams) error {
	_, err := q.db.Exec(ctx, createMerchant, arg.Name, arg.Email)
	return err
}

const listAllMerchants = `-- name: ListAllMerchants :many
SELECT id, name, email, partner_id, created_at FROM merchants ORDER BY created_at ASC
`

func (q *Queries) ListAllMerchants(ctx context.Context) ([]Merchant, error) {
	rows, err := q.db.Query(ctx, listAllMerchants)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Merchant
	for rows.Next() {
		var i Merchant
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.Email,
			&i.PartnerID,
			&i.CreatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
